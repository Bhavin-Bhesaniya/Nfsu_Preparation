Unit - 1 

 What is Computer?
  - Computer is general purpose device that can execute sequences of instructions presented in formal format 
    to perform numerical calculations and other tasks. 
  - Computer Science is study of computer systems and computer processes
  - Computer hardware is collection of all physical elements of the computer system 
  - Computer software is collection of all program stored in and executed by computer system
  - Application software perform task for user 
  - System software operates and controls computer system and provide platform to run application software
  - Computer program is a collection of instructions that performs a specific task when executed by a computer. 
  - Collection of computer programs, libraries and related data are referred to as a software
  - Computer program that performs a well-defined task is known as an algorithm



 What is OS?
  - An operating system is a piece of software that manages all the resources of a computer system, both hardware and software 
    and provides an environment in which the user can execute his/her programs in a convenient and efficient manner.
  - An OS act as resouce allocator and Control program
  - OS is program that acts as interface between user and computer hardware and controls execution of all kinds of programs.
   
   First Os :- 
    - ATLAS(Manchester Univ., late 1950s – early 1960s)
    - evolved from control program 
   
   What is Kernel, Microkernel, Shell:-
    - Kernel is that part of operating system which interacts directly with hardware and performs most crucial tasks. 
    - Microkernel is much smaller in size than conventional kernel and supports only core operating system functionalities. 
    - Shell known as a command interpreter which is part of operating system that receives commands from users and gets them executed 

  Diagram :- https://www.tutorialspoint.com/operating_system/images/conceptual_view.jpg


 
 OS Structures type :- 
    - Monolithic    [MS DOS, Unix, Linux] 
    - Layered       [THE] 
    - Microkernel   [Mach, MINIX]   



 Os Duties / Function :- 
    - Process Management :-
      - Creating and deleting user and system processes 
      - Suspending and resuming processes 
      - Interprocess communication 
      - Process synchronization 
      - Deadlock handling   

    - Memory management :-
      - Keeping track of which part of memory is being used by which job 
      - Allocating and deallocating memory space 
      - management of Primary Memory or Main Memory
      - Main memory is a large array of words or bytes where each word or byte has its own address and directly accessible by CPU
      - Program must execute in main memory
    
    - Storage/File management :-
      - File system management 
        - Creating, deleting and manipulating files and directories 
      - Mass storage management 
        - Free space management 
        - Storage allocation 
        - Disk scheduling 
    
    - Device management :-
      - Manages device communication via their respective drivers
      - Keeps tracks of all devices. Program responsible for this task is known as the I/O controller.

    - Caching     
    - Input-output management  
    - Security
    - Control Over System Performance : Recording delays between request for service and response from system
    - Error detection



 Types of operating systems – 
    Single process operating system    [MS DOS, 1981] 
    Batch-processing operating system  [ATLAS, Manchester Univ., late 1950s – early 1960s] 
    Multiprogramming operating system  [THE, Dijkstra, early 1960s] 
    Multitasking operating system      [CTSS, MIT, early 1960s] 

    Batch Operating System :-
     - Not interact with computer directly
     - There is an operator which takes similar jobs having the same requirement and group them into batches.
     - Lack of interaction between the user and the job.
     - Difficult to provide the desired priorit

    Time-Sharing operating system :-
     - Each task is given some time to execute so that all the tasks work smoothly.
     - operating system uses CPU scheduling and multiprogramming to provide each user with a small portion of a time.

    Distributed Operating System :-
     - Use multiple central processors to serve multiple real-time applications and multiple users.
     - processors communicate with one another through various communication lines
     - These are referred as loosely coupled systems also
     - processors are referred as sites, nodes, computers, and so on.
     - With resource sharing facility, a user at one site may be able to use the resources available at another.
     - Reduction of delays in processing and loading on host computer

    Network Operating System :-
     - runs on a server and provides server capability to manage data, application, user and other networking functionality
     - Purpose to allow shared file and printer access among multiple computers in a network, 
       typically a local area network (LAN), a private network or to other networks.
     - Centeralized Server but dependency on central server

    Real Time operating System :-
     - Defined as data processing system in which time interval required to process and respond to inputs is so small that 
       it controls environment. 
     - Time taken by system to respond to an input and display of required updated information is termed as response time.
       Types :-
        Hard-Real Time System :-
         - Gurantee that critical tasks complete on time 
         - secondary storage is limited or data stored in ROM and Virtual memory almost not found  

        Soft-Real Time System :-
         - Less restrictive with limited utility than hard-real time system



 OS Services :-
    - Os provides services to both the users and to the programs
      - It provides programs an environment to execute.
      - It provides users the services to execute the programs in a convenient manner.

    Types of Services :-
    
      Program Execution :-
       - handle many kinds of activities from user programs to system programs like name serves, file server
       - Each of activities is encapsulated in process
       - Load program into memory, execute it and Handle it
       - Provide mechanism for process synchronization, communication and deadlock handling     

      I/O Operation :-
       - I/O subsystem comprise of I/O devices and their corresponding driver software
       - Drivers hide the peculiarities of specific hardware devices from the users.
       - Os maintaining communication between User and Device Driver

      File System Manipulation :-
       - Organization of files into directories for easy navigation and usage
       - Provide interface for Read or write file and perform different operations on it based on permission mode

      Communication :-
       - Multiple processes communicate with one another through communication lines in the network.
       - OS handles routing and connection strategies, and the problems of contention and security.
       - Both the processes can be on one computer or on different computers, but are connected through a computer network
       - Communication may be implemented by two methods, either by Shared Memory or by Message Passing.

      Error Handling :-
       - An error may occur in CPU, in I/O devices or in the memory hardware. 
       - OS constantly checks for possible errors and takes appropriate action to ensure correct and consistent computing

      Resource Management :-
       - OS manages all kinds of resources using schedulers
       - CPU scheduling algorithms are used for better utilization of CPU.

      Protection :-
       - Protection refers to mechanism or way to control access of programs, processes, or users to resources defined by computer system.
       - OS ensures that all access to system resources is controlled
       - ensures that external I/O devices are protected from invalid access attempts.
       - authentication features for each user by means of passwords.


  
 Os Processing Type :-
   
    Batch Processing :-
     - OS collect program and data together in batch before processing starts.
     - OS defines job which has predefined sequence of commands, programs and data as a single unit.
     - Jobs are processed in the order of submission, i.e., first come first served fashion
     - When job completes its execution, its memory is released and output  job gets copied into output spool for later processing.
     Diagram :- https://www.tutorialspoint.com/operating_system/images/batch_processing.jpg


    Multiprogramming :-
     - Multiprogramming increases CPU utilization by keeping multiple jobs (code and data) in memory so that CPU always has one to execute
     - OS keeps several jobs in memory at time and pick one jobs from its job pull
     - High efficient cpu utilization and user feels many programs run simultaneously
     - Cpu scheduling is required 
     Diagram :- https://www.tutorialspoint.com/operating_system/images/memory_layout.jpg


    Multitasking :-
     - Multitasking is a logical extension of multiprogramming. 
     - CPU executes multiple tasks by switching among them. 
     - Switching is very fast. 
     - Requires an interactive (hands-on) computer where user can directly interact with computer. 
     - Response time should be minimal.
     - Multitasking OS are also known as Time-sharing systems
     - When a process executes, it typically executes for only a very short time before it either finishes or needs to perform I/O.
     - I/O Process slow so During this time, a CPU can be utilized by another process.
     Diagram :- https://www.tutorialspoint.com/operating_system/images/multitasking.jpg   

    Interactivity :- 
     - Ability of users to interact with computer system    
     - Provides the user an interface to interact with the system like keyborad for input and monitor for processed output

    Real-Time System :- 
     - A real-time operating system (RTOS) has well-defined and fixed time constraints which have to be met or the system will fail. 
     - An RTOS is used when rigid time constraints have been placed on the operation of processes or flow of data. 
     - Used in control device in a dedicated application. 
     - Hard- and soft- RTOS. 
     Applications :- embedded systems, robotics, scientific utilities, etc.


    Distributed Environment :- 
     - refers to multiple independent CPUs or processors in a computer system
     - OS distributes computation logics among several physical processors
     - processors do not share memory or a clock. Instead, each processor has its own local memory.
     - OS manages the communications between the processors with various communications lines

    Spooling :-
     - putting data of various I/O jobs in a buffer
     - This buffer is a special area in memory or hard disk which is accessible to I/O devices.
     - Maintains the spooling buffer which provides a waiting station where data can rest while the slower device catches up.
     - Maintains parallel computation because of spooling process as a computer can perform I/O in parallel fashion.
     Diagram :- https://www.tutorialspoint.com/operating_system/images/spooling.jpg
 


 What is SystemCall :-
    - System call is mechanism using which user program can request service from kernel for which it does not have permission to perform. 
    - User programs typically do not have permission to perform operations like accessing I/O devices and communicating other programs. 
    - User program invokes system calls when it requires such services. 
    - System calls provide an interface between program and operating system. 
     Type of System Call :- 
      E.x. :- fork, exec, getpid, getppid, wait, exit. 
 
    Dual-mode operation :-
     - User mode 
     - Kernel mode / supervisor mode / system mode / privileged mode 
     Mode bit– 0: kernel, 1: user 
     Request using a system call



 What is Booting :-
   - Booting is the process of starting the computer and loading the kernel.
   - When a computer is turned on, the power-on self-tests (POST) are performed. 
   - Then bootstrap loader, which resides in the ROM, is executed. 
   - bootstrap loader loads kernel or a more sophisticated loader. 



Unit - 2
 
 What is Process :-
  - Process is program execution
  - Process is defined as an entity which represents basic unit of work to be implemented in system
  - Program is passive entity while procrss is active entity
  - When program loaded into memory it become process, it can be divided into four section :-
    Stack : Contain temporary data such as method/function parameters, return address and local variables
    Heap  : Dynamically allocated memory to a process during its run time
    Text  : Includes current activity represented by value of Program Counter and contents of processor's registers.
    Data  : Contain global and static variable
    Diagram :- https://www.tutorialspoint.com/operating_system/images/process_components.jpg
  - When we compare program with process, process is a dynamic instance of a computer program. 
  


 What is Process State :-
  - Process state is defined by current activity of process as process executes its state changes
  - Only one process can be in running state at any instant
  - Each process is internally represented by process control block(PCB) also called task control block
    
    State :-
     Start :- Initial state when process is first started/created.
     Ready :- Process is waiting to be assigned to a processor. 
              Process come in this state after Start state or while running but interrupted by scheduler to assign CPU to other process
     Running :- Once process has been assigned to processor by OS scheduler, process state is set to running and 
                processor executes its instructions.
     Waiting :- Process moves into waiting state if it needs to wait for resource, such as waiting for user input or waiting for 
                file to become available
     Terminate / Exit :- Once process finishes its execution, or it is terminated by operating system, 
                         it is moved to terminated state where it waits to be removed from main memory.

    Diagram :- https://www.tutorialspoint.com/operating_system/images/process_state.jpg

 
 
 What is PCB(Process Control Block) :-  
  - PCB is data structure maintained by Operating System for every process
  - PCB is identified by an ID(Process ID) 
  - PCB maintained process throughout its lifetime and once it deleted process terminates.
    PCB Contain All information of process :-
     - Process ID
     - Process Privileges : Required to allow/disallow access to system resources
     - Process State 
     - Pointer            : To parent process
     - Program Counter    : A pointer to the address of next instruction to be executed for this process.
     - CPU Register       : Where process need to be stored for execution for running state
     - CPU scheduling information    : Process priority, other scheduling information, etc. 
     - Memory Management Information 
     - Accounting information        : Includes amount of CPU used for process execution, time limits, execution ID 
     - I/O status information        : List of I/O devices allocated to the process.
  


 What is Process scheduling :-
  - Select one process for execution out of all ready processes  
  - Objective of multiprogramming is to have some process running at all times so maximize CPU utilization. 
  - Multitasking switch CPU among processes so frequently that user can interact with each process while it is running. 
  - To meet these objectives process scheduler selects one of available processes for execution.
  - OS maintenance all PCBs in Process Scheduling queues which used to perform process scheduling
    
    OS maintenance following important process scheduling queues :-
     Job Queue     - As process enter system it is put in job queue which keeps all processes in system 
     Ready Queue   - Processes that are residing in memory and are ready for execution are kept in ready queue
                   - It is implemented as linked list of PCBs with header containing pointers to first and last PCBs.
     Device Queue  - List of processes waiting for particular I/O device is called a device queue. 
                   - Each device has its own device queue. 
     Diagram :- https://www.tutorialspoint.com/operating_system/images/queuing_diagram.jpg

  - OS Scheduler determine how to move processes between ready and run queues which can only have one entry per processor core on system
    In above diagram it is merged with CPU 
  
    Two State Process Model :-
      Running 
      Not-Running
    

  Types of Schedulers :-
   - Schedulers are special system software which handle process scheduling in various ways.
   - Their main task is to select jobs to be submitted into system and to decide which process to run.
    
   Long-term Scheduler(Job Scheduler) :-
    - Select processes from those submitted by user and loads them into memory for execution
    - It controls degree of multiprogramming which is represented by number of processes in the memory  
    - It is invoked less frequently.
    - When process changes state from new to ready, then there is use of long-term scheduler.
    - Long-term scheduler select proper mix of CPU-bound processes and i/o-bound processes. 
    - A CPU-bound process spends most of its time doing computations. 
    - An i/o-bound process spends most of its time doing i/o.
    - Multitasking os like unix and windows not use long-term scheduler they put all new processes in the memory for short-term scheduler

   Short-term scheduler(CPU Scheduler) :- 
    - Selects process among processes that are ready to execute and allocates CPU to one of them.
    - It is invoked frequently and very fast than long-term scheduler
    - It is also known as dispatchers which make decision of which process to execute next.  

   Medium-term scheduler(Swapping):- 
    - Removes processes from memory and thus reducing degree of multiprogramming
    - Running processes may become suspended if it makes an I/O request
    - Remove process from memory and make space for other processes suspended process moves to secondary storage its called Swapping
    - Swapping may be used to improve process mix and to free up some memory in uncontrollable circumstances.  

   - CPU Scheduler is invoked when process :-
    - switches from running state to waiting state  (condition 1) 
    - switches from running state to ready state    (condition 2) 
    - switches from waiting state to ready state    (condition 3) 
    - terminates                                    (condition 4)  
   - CPU scheduing is optional for condition 2 and 3 but necessary in other 2 condition
   - MS DOS does not support multiprogramming hence no cpu scheduling
  
  
   Types of scheduling :-
    Non-Preemptive scheduling / cooperating scheduling :-
     - Process keeps in cpu until it terminates or switches to waiting state
     - Some machine support is :-  Windows 3.1X

    Preemptive scheduling :- 
     - Process can be forced to leave cpu and switch to ready queue
     - Ex :- Unix, Linux, Windows 95 or Higher   



 What is Context Switching :-       
  - Context switch is mechanism to store and restore state or context of CPU in PCB so that process execution can be 
    resumed from same point at later time. 
  - Using this technique, context switcher enables multiple processes to share single CPU. 
  - Context switching is an essential part of a multitasking operating system features.
  - It is faster on RISC processor with overlapped register windows
  - When scheduler switches CPU from executing one process to execute another, state from current running process is stored into PCB 
  - After this, state for process to run next is loaded from its own PCB and used to set the PC, registers, etc. 
    At that point second process can start executing.
  - To avoid the amount of context switching time, some hardware systems employ two or more sets of processor registers
  - When process is switched followin information is stored :-
     - Program Counter
     - Scheduling information
     - Base and limit register value
     - Currently used register
     - Changed State
     - I/O State information
     - Accounting information

 

 What is process creation :- 
  - Process creation is one process which creating another process
  - Processes are called parent process and child process respectively
  - Each process has unique id
  - Process may obtain resources either from its parent or from operating system directly
  - Parent process continues executing with its children process and wait for them to finish
  - Process may be duplicate of its parent process(Same code or data) or may have new program loaded intoit
  - Typically kernal is first process to be created, is root of process tree
  - Zoombie process is process that has terminated but its still exists in PCB because its parent has not yet accpted its return value

 
 What is process termination :-
  - Process termination marks deletation of PCB process
  - A parent process may be terminated child process :-
    - If it has exceeded its resource usage
    - If its results is no more needed
    - If parent process is terminating and operating system doesn't allow an orphan process


 
 Inter-Process communication :-
  - Reason
    - Information sharing
    - Computational Speedup
    - Modularity 
    - Convenience
  - Models
    - Shared Memory
    - Message Passing [Send(p, message) and Receive(id, message)]  



 What is Thread :-
  - Thread is smallest sequences of instructions that can be managed independently by scheduler
  - Thread is component of process
  - Multiple Thread can exists within same process, executing concurrently and share resources such as memory
  - Threads of process share its instructions(Executable Code ) and its context(value of its variable at given any moment)

  Difference between Process and Thread :-
   - processes are typically independent while threads exist as parts of a process
   - processes carry considerably more state information than threads
   - multiple threads within a process share process state as well as memory and other resources 
   - processes have separate address spaces, whereas threads share their address space
   - processes interact only through system-provided inter-process communication mechanisms
   - context switching between threads in same process is typically faster than context switching between processes

  Advantages of Multi-Thread Programming :-
    - responsiveness 
    - faster execution 
    - better resource utilization 
    - easy communication 
    - parallelization



 What is Dispatcher :-
  - Dispatcher is module of operating system that gives control of cpu to process selected by CPU scheduler   
    Steps :-
     - Switching Context
     - Switching to User Mode
     - Jumping to proper location in user program
  - Dispatch Latency is time taken to stop process and start another
  - It is pure overhead

  Scheduling Criteria :-
    - ↑ CPU utilization  - Percentage 
    - ↑ Throughput       - Number of processes completed per unit time 
    - ↓ Turnaround time  - Time from submission to completion (time spent in different queues + time spent in CPU 
                                                               + time spent in different i/o devices) 
    - ↓ Waiting time     - Time spent in ready queue (only) 
    - ↓ Response time    - Time from submission to first response    



 Algorithm :-
  Scheduling Algorithm :
    - Used to select for execution

    1)First-Come First-Served(FCFS) Scheduling :-
      - Non-Preemptive
      - High Average Waiting Time
      - Convoy Effect - Several small processes may need to wait if large process is give the cpu   
    