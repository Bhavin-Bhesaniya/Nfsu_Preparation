Unit-1 -

 Computer Base :-
  Computer    - General purpose device that execute sequences of instruction to perform numerical calculations and other tasks. 
  CScience    - Study of computation, automation, and information.
  Hardware    - Collection of all physical elements of computer system 
  Software    - Collection of computer programs, libraries and related data are referred to as software which stored in computer
  System Sf   - Designed to run computer's hardware and application program
  Application Sf - Helps to automate user task based on the Users Input


 Program Execution Base :-   
  Algorithm   - Specific procedure for solving well-defined computational problem
  Compiler    - Converts program written in high-level language(Source Language) to low-level language(Machine Language).
  Loader      - Responsible for loading executable files into memory and execute them 
  Linker      - Takes input object code generated by Compiler/Assembler
  Assembler   - Take computer instructions and converts them into pattern of bits so that computer's processor can perform operations
  Interpreter - Line-by-line Convert high-level instructions to machine level language
  JVM         - Runtime environment in which java bytecode can be executed

 
 System Base :- 
  Boot-loader - Small bit of code that generally loads larger boot loader from another partition on drive
  BIOS        - Computer's microprocessor uses to start computer system after it is powered on
  UEFI        - Unified Extensible Firmware Interface Specification for software program that connects computer's firmware to its OS

 
 OS Base :-   
  Operating System - Acts as interface between computer hardware and user which control execution of all programs
  Kernel           - Central component of OS which interacts directly with hardware and manages all operations of computer
  Shell            - Known as command interpreter which is part of OS that receives command from user and gets them executed
  System Call      - System call is mechanism using which user program request kernel to access all system functionalities   
  Partition        - Defines how information is structured on partition also code that is used during startup if partition is bootable 


 OS Architecture :-
  Monolithic  - Entire OS working in kernel space so execution is fast and process run completely in single address space
  Layered     - OS broken into no. of layers where each layer has different functionality
  Microkernel - Kernel is divided into processes, known as servers
  Modular     - Kernel is divided into no. of independent files called modules which added to system run Time
  Hybrid      - Combination of both Monolithic and Mircrokernel which use speed and design of Monolithic, modularity and stability of microkernel
    

 OS Type :-
  Batch            - Set Similar kind of process(job) in same batch in First Come First Served(FCFS) manner for execution
  Multiprogramming - Increases CPU utilization by keeping multiple job(process)in main memory so that CPU always has one to execute(Non-Preemptive)
  MultiTasking     - Sharing small portion of time or time quantum among multiple processes by CPU Scheduling (Context-Switching)  (Pre-emptive)
  MultiProcessing  - More than one processor in system called multiprocessing so multiple process executed simultaneously to achieve Parallel processing 
  Multi-Threading  - Single process have multiple code segments(threads) so it can running concurrently within "Context" of that process
  Real-Time        - Fixed time Constraint system where time constraint matter lot and can't be delays
  Distributed      - Multiple Processors serve Multiple applications to multiple users using Central Processor
  Cluster          - If Processors connect with local network(Single network) like Single server
  Embedded         - Work on fixed machine like A.C.
  Network          - Runon Central server computer and provide server capability to manage application,user data and other networking functionality     


 Other :-
  Spooling         - Different Pheripheral devices(I/O Device) can run simultaneously    
  API              - Software intermediary that allows two applications to talk to each other
  Virtualization   - Simulate your physical device and represent it as separate machine    
  Containerization - OS-level virtualization doesn't simulate entire physical machine 




UNIT - 2 Process :-

 Process       - When user started executing program it become process
 Root Process  - Kernal is first process created or say Root process of process tree 
 Zoombie/Defunct - Process is terminated but its still exists in PCB because its parent has not yet accpted its return value  
                 - Process which completed their execution by exit() system call but still has an entry in Process Table            
 Process State - Defined Currently state of process as process execute it state change
 PCB           - Data structure maintained by Operating System for every process using process ID 
 Process Table - Status of each and every process that is created in OS along with their PIDs 
 
 Scheduling Queue - OS maintenance all PCBs in Process Scheduling queues to perform process scheduling
 JOB Queue     - As Process enter system it put in job queue which keeps all processes in system 
 Ready Queue   - Processes that are residing in memory and are ready for execution are kept in ready queue
 Device Queue  - Processes waiting for particular I/O resource are kept in device queue 

 Dispatcher    - Gives PCB information of selected process to cpu to execute process and take decision of which process to execute next
 Dispatcher latency - Time taken by dispatcher is known as
 Swapping       - Remove process from RAM and make space for other processes and suspended process moves to secondary storage 
 NonPre-emptive - Process keeps in cpu until it terminates(Complete) also called as multiprogramming 
 Pre-emptive    - Process can be forced to leave cpu and switch to ready queue due to high-priority process or time quantum 
 Context Switch - Store and restore process context state in PCB so that process execution can be resumed from same point at later time
 IPC            - Allow processes to communicate with each other and synchronise their actions without using same address space
 Pipe           - Communication medium between two or more related or interrelated processes 

 Thread     - Smallest sequences of instructions that can be independently managed by CPU scheduler
 StarVation - When process wait for long time in ready queue due to high-priority process