ER model (Entity-Relationship model) :-
 - High-level data model define data element and relationship for specified system
 - It develop conceptual design or say design view of database
 - Database structure portrayed as diagram called entity-relationship diagram
 - Database represented using notation 
 - Require overall knowledge of ER Diagram like analyse real-world enterprise, relationship between Entity

 Component :- 
                      ER Model
  Entity          Attribute                  Relation
  - Weak Entity   - Key Attribute            - one-to-one
                  - Composite Attribute      - one-to-many   
                  - Multivalued Attribute    - many-to-one
                  - Derived Attribute        - many-to-many 


  Entity(Record):-
   - Entity may be object, class, person or place represented as rectangle in ER diagram
   - Tangible entities are entities that physically exist in real world
   - NonTangible not physically exist in real world

   Weak Entity :-
    - Entity that depend on another entity called weak entity represented by Double Rectangle
    - Weak entity doesn't contain any key attribute
 
  
  Attribute(Column) :-
   - Describe property of entity represent by Eclipse
   Key Attribute         :- Represent characteristics of entity known as Primary key using ellipse with underlined text
   Composite Attribute   :- Attribute that composed other attribute represented by different connected with ellipse
   Multivalued Attribute :- Attribute that have More than one value represented by Double Eclipse
   Derived Attribute     :- Attribute that derived from other attribute represented by dashed ellipse(--)


  Relationship :-
   - Relation between entities represent by Diamond or rhombus
   - Mapping Constraint Known as Data constraint represent relationship between entities

   One-to-One Relationship   :- One instance of entity associated with relationship
   One-to-many relationship  :- When only one instance of entity associated with more than one instance of entity
   Many-to-one relationship  :- More than one instance of entity associated with one instance of entity
   Many-to-many relationship :- More than one instance of entity associated with more than different instance of entity


 Point for Convert ER diagram to Table :-
  - Entity type become table
  - All single-valued attribute become column for table
  - Key attribute of entity type represented by primary key
  - Multivalued attribute represented by separate table
  - Composite attribute represented by component 
  - Derived attribute not considered in table


  
Key :-
 - Used to uniquely identify any record or row data from table, establish and identify relationship between table

 Primary key   :- Identify one and only one instance of entity uniquely 
 Candidate key :- Except for primary key remaining attribute considered candidate key as strong as primary key
 Super Key     :- Superset of candidate key
 Foreign key   :- Column of table used to point to primary key of another table
 Alternate key :- Total number of alternate keys is total number of candidate keys minus primary key (may or not exist)
 Composite key(Concatenated Key) :- Whenever primary key consist more than one attribute it known as composite key 
 Artificial key :- Created using arbitrarily assigned data, Created when primary key is large and complex has no 
                   relationship with many other relation 



Generalization :- Bottom-up approach in which two or more entities combine to form higher level entity 
                  Entities combined to form more generalized entity(Subclass combined to make superclass)
Specialization :- Top-down approach in which one higher level entity broken down into two lower level entities
Aggregation    :- Relation between two entities treated as single entity and aggregated into higher level entity



Relational Model :-
 - Represent as table with column and row where Each row known as tuple and Each column of table has name or attribute
 - Name of relationm attribute are unique
 - Each relation cell contain exactly one atomic (single) value and no duplicate value 

 Domain    :- Contain set of atomic values that attribute take
 Attribute :- Name of particular table column  
 Relational instance :- Represented by finite set of tuple and not have duplicate tuples
 Relational schema   :- Contain name of relation of all columns or attributes
 Relational key      :- Identify row uniquely

 Ex :- STUDENT Relation -> 5 Tuple
  NAME	ROLL_NO	 PHONE_NO	   ADDRESS	AGE  -> Attribute
  Ram	    14795	 7305758992	 Noida	  24
  Shyam	  12839	 9026288936	 Delhi	  35
  

 Relational Algebra :- Procedural query language that gives step by step process to obtain result of query 

 
 Relational Calculus :- 
  - Non-procedural query language, tells what to do but never explains how to do 
  - Relational calculus including SQL-QBE and QUEL
  - Predicate is truth-valued function with argument either true or false
  - Free and bound variable compared with global and local variable of programming language
  
  Types of Quantifiers :-
   Universal Quantifier    :- Given set of all tuples satisfy given condition
   Existential Quantifiers :- Given set of tuple there is at least one occurrences whose value satisfy given condition


  Tuple Relational Calculus (TRC)  |  Domain Relational Calculus (DRC)



Integrity Constraint :-
 - Set of rules used to maintain quality of information
 - Ensure that data insertion, updating and other processes performed in such way that data integrity not affected
 
 Domain constraint :- 
  - Valid set of value for attribute
  - Data type of domain include string, character, integer, time, date, currency, etc.
  - Value of attribute must available in corresponding domain

 Entity integrity constraint :-
  - Primary key value can't be null 
  - Table can contain null value other than primary key field
  
 Referential Integrity Constraint :- 
  - Foreign key in Table 1 refer to Primary Key of Table 2 then every value of Foreign Key in Table 1 must be null 
    or be available in Table 2

 Key constraint :- 
  - Entity set that used to identify entity within its entity set uniquely
  - It can have multiple key but out of which one key will be primary key
