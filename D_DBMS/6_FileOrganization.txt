File Organization :-
 - File is collection of record and Using primary key access record 
 - Type and frequency of access determined by type of file organization which used for given set of records
 - Files of fixed length record easier to implement than files of variable length record
 - Provide optimal record selection and modification(Selected as fast as possible)
 - Duplicate record cannot be induced as result of insert, update or delete 



Sequential File Organization :-
 Pile File Method :- Store record in sequence, in case updating or deleting of any record
  
 Sorted File Method :-
  - New record inserted at end then sort sequence in ascending or descending order based on any key
  - In case of modification, update record then sort file

 Pros :-
  - Fast and efficient | Stored in cheaper storage mechanism like magnetic tape
  - Simple design      | Used when most record to be accessed, report generation or statistical calculation
  
 Cons :-
  - Cannot jump on particular record becaus it move sequentially which takes time
  - Sorted file method take more time and space for sorting record
 

  
Heap file organization(unordered file):-
 - Record inserted at file's end at time doesn't require sorting and ordering of record
 - When data block full new record stored in any other block of memory
 - Check all data until get requested because unordered
 Pros :- Good for bulk insertion | Small database fetching and retrieving faster 
 Cons :- Inefficient for large database because it takes time to search or modify record



Hash File Organization :-
 - Use hash function on some field of record 
 - Output determine location of disk block where record placed
 - When new record has to be inserted then address generated using hash key and record directly inserted 
 - No effort for searching and sorting entire file
 - Each record stored randomly in memory



B+ File Organization :-
 - Advanced indexed sequential access method uses tree-like structure to store record in File
 - For each primary key index generated and mapped with record
 - Similar to binary search tree (BST) but it have more than two children 
 - All record stored only at leaf node, Intermediate node act as pointer to leaf node and not contain any record
 - B+ tree structure also grow or shrink  
 Pros :- Searching easy | Traversing through tree structure easier and faster | No Size restriction
 Cons :- Inefficient for static method



Indexed sequential access method (ISAM) :-
 - Advanced sequential file organization where Record stored in file using primary key 
 - Record has to be retrieved based on its index value, then address of data block fetched and retrieved from memory

 Pros :- Each record has address so easy searching | Support range retrieval and partial retrieval of record 
 Cons :- 
  - Require extra space in disk to store index value
  - When new record inserted or deleted it reconstructed to maintain sequence



Cluster file organization :-
 - When two or more record stored in same file known as clusters 
 - Reduce cost of searching for various record in different file
 Pros :- Efficient for 1:M mapping between table
 Cons :- Low performance for large database | Not for 1:1 mapping | Change joining condition traversing take lot time
 
 Indexed Cluster :- Record grouped based on cluster key and stored together 
 Hash Cluster    :- Generate value of hash key for cluster key and store record with same hash key value
