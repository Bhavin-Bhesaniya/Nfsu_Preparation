Unix - vi Editor 
 - vi is case-sensitive Editor enable to edit lines in context with other lines in file
 - Improved version of vi called VIM(Vi IMproved)
 - Notice tilde (~) on each line following cursor that represent unused line 
 - Available on all Unix | Implementation similar to board | Require very few resources | User-friendly

 Starting vi Editor :-
  vi filename      Create new file if it not exist otherwise open existing file in read-only mode
  vi -R filename   Open existing file in read-only mode
  Ex :-  $vi testfile

  
 Operation Modes :-
  Command mode - Perform administrative tasks such as saving, executing command | Whatever type interpreted as command
  Insert mode  - Insert text into file | Typeing interpreted as input and placed in file
  - vi always starts in command mode 
  - Enter text -> Insert mode -> Type i 
  - Insert mode to command -> Esc key(2 time)
  
  
 Getting Out of vi :- :q | To ignore modified message -> :q! 
  - Save content :w | :w filename2  |  Save and quit -> :wq  or  ZZ

  
 Moving within File :- 
  - Remember that you must be in command mode (press Esc twice) to move cursor
    k   up one line
    j   down one line
    h   left one character position
    l   right one character position

  
 Editing Files :- In insert mode 
    i   Insert text before current cursor location
    I   Insert text at beginning of current line
    a   Insert text after current cursor location
    A   Insert text at end of current line
    o   Create new line for text entry below cursor location
    O   Create new line for text entry above cursor location

  
 Deleting Character :- 
   x   Delete character under cursor location
   X   Delete character before cursor location
   dw  Delete from current cursor location to next word
   d^  Delete from current cursor position to beginning of the line
   d$  Delete from current cursor position to end of the line
   D   Delete from cursor position to end of current line
   dd  Delete line cursor is on
    
    
 Change Command :- 
   - Change characters, words, or lines in vi without deleting them 
    cc  Removes the contents of the line, leaving you in insert mode.
    cw  Changes the word the cursor is on from the cursor to the lowercase w end of the word.
    r   Replaces the character under the cursor. vi returns to the command mode after the replacement is entered.
    R   Overwrites multiple characters beginning with the character currently under the cursor. You must use Esc to stop the overwriting.
    s   Replaces the current character with the character you type. Afterward, you are left in the insert mode.
    S   Deletes the line the cursor is on and replaces it with the new text. After the new text is entered, vi remains in the insert mode.
    

 Copy and Paste Command :-
    yy  Copy current line
    yw  Copy current word from character lowercase w cursor is on until end of word
    p   Put copied text after cursor
    P   Puts yanked text before cursor


 Advanced Command :-
   /   search forward(downwards) in file
   ?   search backward (upwards) in tfile
   n/N Repeat previous search command in same or opposite direction, respectively 
   ^   Search at beginning of line (Use at beginning of search expression)
   .   Match single character
   *   Match zero or more previous character
   $   End of line (Use at end of search expression)
   [   Start set of matching or non-matching expression
   <   Escaped with backslash to find ending or beginning of word
   >   Helps to see '<' character description above
   f/F search for character on current line only, f search forwards and F searches backwards
   t/T search for character on current line only, t moves to position before character and T after character

  
 Set Command :-
   :set ic     Ignore case when searching
   :set ai     Set autoindent
   :set noai   Unset autoindent
   :set nu     Display lines with line numbers on left side
   :set sw     Set width of software tabstop
   :set ws     If wrapscan set and word not found, it will try searching for it at beginning
   :set wm     Value greater than zero editor automatically "word wrap"
   :set ro     Changes file type to "read only"
   :set term   Print terminal type
   :set bf     Discard control characters from input

  
 Running Command :-
   - Substitution command (:s/) enables quickly replace words or groups of words within your file 
   - :s/search/replace/g
